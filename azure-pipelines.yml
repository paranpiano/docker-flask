# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'baed5560-fcc6-47bf-9023-31093132419d'
  imageRepository: 'paranpianodockerflask'
  containerRegistry: 'devopsflaskcontainer.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy to Azure Web App
  jobs:
    - deployment: Deploy
      displayName: Deploy Web App
      environment: production
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
              - task: AzureWebApp@1
                displayName: 'Azure Web App Deploy: paranpianodockerflask'
                inputs:
                  azureSubscription: '종량제(23f273d4-9b3d-41d3-b46f-251c740c0556)'
                  appType: 'webAppContainer'
                  deployToSlotOrASEName: 'production'
                  resourceGroupName: 'devops-task-flask_group'
                  appName: 'devops-task-flask-container'
                  containerType: 'dockerRegistry'
                  dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)
                  imageRepository: '$(containerRegistry)/$(imageRepository)'
                  tagSource: 'specified'
                  tag: '$(tag)'